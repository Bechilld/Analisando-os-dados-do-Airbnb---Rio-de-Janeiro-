{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyOUGqTXfhRYOlzxcLMdL0IF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Bechilld/Analisando-os-dados-do-Airbnb---Rio-de-Janeiro-/blob/main/Analise%20de%20Dados%20de%20Hospedagem%20da%20Airbnb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Analise dos dados da Airbnb, sobre o Rio de Janeiro\n"
      ],
      "metadata": {
        "id": "fuH3tqNgcZ-u"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##**Qual é importancia dessa analise?**\n",
        "\n",
        "Apesar do notável reconhecimento que o nome Airbnb traz consigo, é importante exclarecer o que pode significar além disso. \n",
        "\n",
        "Empresas dependem fundamentalmente das suas requizar com os dados, quanto maior for a empresa, maior está o número de dados. Se relativiza apenas quando se compara duas empresas de áreas distintas, exemplo, uma empresa de tecnologia deve haver mais dados que uma de saúde, mas ambas, com seus respectivos tamanhos, contém dados, dados importantes para empresa. \n",
        "\n",
        "Se tratando da **Airbnb, são dados sobre hospedagem**, riquíssimos, dados esses que asseguram toda uma **estratégia e segurança, segurança para os clientes**, já que **os dados se tornam o produto do cliente.**\n",
        "\n",
        "E aqui, é tratado os dados do Rio de janeiro. A analise desses dados são bem claras, tentando trazer a complexidade de forma **limpa e didática**. "
      ],
      "metadata": {
        "id": "2eA9jl7Nc4wx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#importação dos pacotes necessários.\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "FUIE7PHLDeZB"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#importar arquivo de dados Airbnb para analise. \n",
        "df = pd.read_csv(\"http://data.insideairbnb.com/brazil/rj/rio-de-janeiro/2022-06-20/visualisations/listings.csv\")"
      ],
      "metadata": {
        "id": "sj6KLU1vIQSl"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **INICIANDO A ANÁLISE DOS DADOS**"
      ],
      "metadata": {
        "id": "tGC_BBYlM6UA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **1. Observação do dataframe do arquivo.**"
      ],
      "metadata": {
        "id": "_p-MhDffNAnd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#analisando as 5 primeiras linhas \n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "wjalvMPoJMSo",
        "outputId": "d4c36125-1069-4367-a84b-d1e8e342ad43"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   id                                               name  \\\n",
              "0               17878  Very Nice 2Br in Copacabana w. balcony, fast WiFi   \n",
              "1  556930647599893392   Venha passar uma pernoite em um veleiro na Urca!   \n",
              "2             1174007                  100% Best View In Copa In Suite 2   \n",
              "3             8410797  Ipanema(Arpoador) 100mdo Mar/ Jan & Carnaval +Fev   \n",
              "4            28053241     Navegar a  Bordo de um Veleiro Francês no Rio!   \n",
              "\n",
              "     host_id    host_name  neighbourhood_group neighbourhood  latitude  \\\n",
              "0      68997     Matthias                  NaN    Copacabana -22.96599   \n",
              "1  198206849      Andréia                  NaN          Urca -22.94781   \n",
              "2    3962758  Thiago Luiz                  NaN    Copacabana -22.97277   \n",
              "3   42038091       Sheila                  NaN       Ipanema -22.98871   \n",
              "4  193860988      Luciano                  NaN          Urca -22.95056   \n",
              "\n",
              "   longitude        room_type  price  minimum_nights  number_of_reviews  \\\n",
              "0  -43.17940  Entire home/apt    350               5                272   \n",
              "1  -43.16351     Private room    280               1                  1   \n",
              "2  -43.17966     Private room    107               2                177   \n",
              "3  -43.19334     Private room   1000               3                  1   \n",
              "4  -43.17175     Private room   1850               2                  0   \n",
              "\n",
              "  last_review  reviews_per_month  calculated_host_listings_count  \\\n",
              "0  2022-04-23               1.87                               1   \n",
              "1  2022-02-19               0.25                               1   \n",
              "2  2022-06-07               1.69                               6   \n",
              "3  2017-09-28               0.02                               3   \n",
              "4         NaN                NaN                               1   \n",
              "\n",
              "   availability_365  number_of_reviews_ltm  license  \n",
              "0               311                      8      NaN  \n",
              "1               365                      1      NaN  \n",
              "2               357                     29      NaN  \n",
              "3               362                      0      NaN  \n",
              "4               180                      0      NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dcf506b4-1325-4efb-9170-bf36e52dad28\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>number_of_reviews_ltm</th>\n",
              "      <th>license</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>17878</td>\n",
              "      <td>Very Nice 2Br in Copacabana w. balcony, fast WiFi</td>\n",
              "      <td>68997</td>\n",
              "      <td>Matthias</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Copacabana</td>\n",
              "      <td>-22.96599</td>\n",
              "      <td>-43.17940</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>350</td>\n",
              "      <td>5</td>\n",
              "      <td>272</td>\n",
              "      <td>2022-04-23</td>\n",
              "      <td>1.87</td>\n",
              "      <td>1</td>\n",
              "      <td>311</td>\n",
              "      <td>8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>556930647599893392</td>\n",
              "      <td>Venha passar uma pernoite em um veleiro na Urca!</td>\n",
              "      <td>198206849</td>\n",
              "      <td>Andréia</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urca</td>\n",
              "      <td>-22.94781</td>\n",
              "      <td>-43.16351</td>\n",
              "      <td>Private room</td>\n",
              "      <td>280</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2022-02-19</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1</td>\n",
              "      <td>365</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1174007</td>\n",
              "      <td>100% Best View In Copa In Suite 2</td>\n",
              "      <td>3962758</td>\n",
              "      <td>Thiago Luiz</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Copacabana</td>\n",
              "      <td>-22.97277</td>\n",
              "      <td>-43.17966</td>\n",
              "      <td>Private room</td>\n",
              "      <td>107</td>\n",
              "      <td>2</td>\n",
              "      <td>177</td>\n",
              "      <td>2022-06-07</td>\n",
              "      <td>1.69</td>\n",
              "      <td>6</td>\n",
              "      <td>357</td>\n",
              "      <td>29</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8410797</td>\n",
              "      <td>Ipanema(Arpoador) 100mdo Mar/ Jan &amp; Carnaval +Fev</td>\n",
              "      <td>42038091</td>\n",
              "      <td>Sheila</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Ipanema</td>\n",
              "      <td>-22.98871</td>\n",
              "      <td>-43.19334</td>\n",
              "      <td>Private room</td>\n",
              "      <td>1000</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2017-09-28</td>\n",
              "      <td>0.02</td>\n",
              "      <td>3</td>\n",
              "      <td>362</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>28053241</td>\n",
              "      <td>Navegar a  Bordo de um Veleiro Francês no Rio!</td>\n",
              "      <td>193860988</td>\n",
              "      <td>Luciano</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urca</td>\n",
              "      <td>-22.95056</td>\n",
              "      <td>-43.17175</td>\n",
              "      <td>Private room</td>\n",
              "      <td>1850</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcf506b4-1325-4efb-9170-bf36e52dad28')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dcf506b4-1325-4efb-9170-bf36e52dad28 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dcf506b4-1325-4efb-9170-bf36e52dad28');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "IY53TY2UQOwu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **2. Quais são os tipos de variáveis?**"
      ],
      "metadata": {
        "id": "BUJ71Y8mQCLw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Identificar volume de dados do DataFrame.\n",
        "print(\"Variaveis:\\t\",df.shape[0])\n",
        "print(\"Colunas:\\t\", df.shape[1])\n",
        "print(\"-\"*41)\n",
        "#Tipos de variáveis.\n",
        "display(df.dtypes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 399
        },
        "id": "ufVn9MGeQkxd",
        "outputId": "6c191865-03fb-4af1-fb04-599064c8f3b4"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Variaveis:\t 24881\n",
            "Colunas:\t 18\n",
            "-----------------------------------------\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "id                                  int64\n",
              "name                               object\n",
              "host_id                             int64\n",
              "host_name                          object\n",
              "neighbourhood_group               float64\n",
              "neighbourhood                      object\n",
              "latitude                          float64\n",
              "longitude                         float64\n",
              "room_type                          object\n",
              "price                               int64\n",
              "minimum_nights                      int64\n",
              "number_of_reviews                   int64\n",
              "last_review                        object\n",
              "reviews_per_month                 float64\n",
              "calculated_host_listings_count      int64\n",
              "availability_365                    int64\n",
              "number_of_reviews_ltm               int64\n",
              "license                           float64\n",
              "dtype: object"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **3. Dicionário**"
      ],
      "metadata": {
        "id": "qbivgJMFWfQ-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Dicionário das variáveis**\n",
        "\n",
        "*   **id** - número de id gerado para identificar o imóvel\n",
        "\n",
        "*   **name**- nome da propriedade anunciada\n",
        "\n",
        "*   **host_id**- número de id do proprietário (anfitrião) da propriedade\n",
        "\n",
        "*   **host_name** - Nome do anfitrião\n",
        "\n",
        "*   **neighbourhood_group** - esta coluna não contém nenhum valor válido\n",
        "\n",
        "*   **neighbourhood **- nome do bairro\n",
        "\n",
        "*   **latitude **- coordenada da latitude da propriedade\n",
        "\n",
        "*   **longitude** - coordenada da longitude da propriedade\n",
        "\n",
        "*   **room_type** - informa o tipo de quarto que é oferecido\n",
        "\n",
        "*   **price **- preço para alugar o imóvel\n",
        "\n",
        "*   **minimum_nights** - quantidade mínima de noites para reservar\n",
        "\n",
        "*   **number_of_reviews** - número de reviews que a propriedade possui\n",
        "\n",
        "*   **last_review** - data do último review\n",
        "\n",
        "*   **reviews_per_month** - quantidade de reviews por mês\n",
        "\n",
        "*   **calculated_host_listings_count** - quantidade de imóveis do mesmo anfitrião\n",
        "\n",
        "*   **availability_365** - número de dias de disponibilidade dentro de 365 dias\n"
      ],
      "metadata": {
        "id": "AQD3yetPW345"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "j8g7gojJY5cK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **4. Qual é a porcentagem de valores ausentes no DataSet?**\n"
      ],
      "metadata": {
        "id": "0Sh6e_WUaYye"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sabendo as lacunas do DataSet, sabendo quão preenchido está de dados o DataSet, há noção do que pode ser analisado com mais precisão. "
      ],
      "metadata": {
        "id": "tWZsTP9WbN0C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Ordenando em ordem decrescente os valores as variáveis por seus valores ausentes\n",
        "(df.isnull().sum() / df.shape[0]).sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "173KEd0IbIT9",
        "outputId": "8e0d280e-d304-49d3-bbc9-98de1ca2a8a7"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "license                           1.000000\n",
              "neighbourhood_group               1.000000\n",
              "reviews_per_month                 0.308187\n",
              "last_review                       0.308187\n",
              "host_name                         0.004702\n",
              "name                              0.000844\n",
              "number_of_reviews                 0.000000\n",
              "number_of_reviews_ltm             0.000000\n",
              "availability_365                  0.000000\n",
              "calculated_host_listings_count    0.000000\n",
              "id                                0.000000\n",
              "minimum_nights                    0.000000\n",
              "room_type                         0.000000\n",
              "longitude                         0.000000\n",
              "latitude                          0.000000\n",
              "neighbourhood                     0.000000\n",
              "host_id                           0.000000\n",
              "price                             0.000000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Acima, próximo ou igual a 1, equivale a 100% de valores ausentes, próximo de 0 significa que os dados estão quase completos ou completos. \n",
        "**O preço, indicado como completo, então há todos os preços registrados.**"
      ],
      "metadata": {
        "id": "dvTMH5mAdgjk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Plotar histograma das variáveis numéricas.\n",
        "df.hist(bins=15, figsize=(15,10));"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "63otKSpre7Bb",
        "outputId": "ad0a19b5-1428-4523-ccc1-f2dd5c7902bd"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 16 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Já é possível concluir que existem outliers. Existem valores que fazem existir discrepancia de uma barra para outra."
      ],
      "metadata": {
        "id": "WLMYCEq1hua4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **5. Quais são os outliers?**"
      ],
      "metadata": {
        "id": "sjR70ilEilOT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Ver resumo estatístico das variáveis numéricas.\n",
        "df[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',\n",
        "    'calculated_host_listings_count', 'availability_365']].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "zs4QYZW2ix3t",
        "outputId": "66ca9f8f-8366-452a-fcb4-89e6ed3c027e"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               price  minimum_nights  number_of_reviews  reviews_per_month  \\\n",
              "count   24881.000000    24881.000000       24881.000000       17213.000000   \n",
              "mean      745.395884        5.358426          16.818818           0.812952   \n",
              "std      4983.640074       26.044111          36.859241           1.011219   \n",
              "min         0.000000        1.000000           0.000000           0.010000   \n",
              "25%       180.000000        1.000000           0.000000           0.130000   \n",
              "50%       300.000000        2.000000           3.000000           0.450000   \n",
              "75%       600.000000        4.000000          15.000000           1.100000   \n",
              "max    591723.000000     1125.000000         534.000000          18.740000   \n",
              "\n",
              "       calculated_host_listings_count  availability_365  \n",
              "count                    24881.000000      24881.000000  \n",
              "mean                         8.020297        214.774165  \n",
              "std                         22.311380        131.693681  \n",
              "min                          1.000000          0.000000  \n",
              "25%                          1.000000         89.000000  \n",
              "50%                          1.000000        212.000000  \n",
              "75%                          4.000000        356.000000  \n",
              "max                        184.000000        365.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1fe1a0a7-567d-4d3c-8956-18b1d81b01f7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>24881.000000</td>\n",
              "      <td>24881.000000</td>\n",
              "      <td>24881.000000</td>\n",
              "      <td>17213.000000</td>\n",
              "      <td>24881.000000</td>\n",
              "      <td>24881.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>745.395884</td>\n",
              "      <td>5.358426</td>\n",
              "      <td>16.818818</td>\n",
              "      <td>0.812952</td>\n",
              "      <td>8.020297</td>\n",
              "      <td>214.774165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4983.640074</td>\n",
              "      <td>26.044111</td>\n",
              "      <td>36.859241</td>\n",
              "      <td>1.011219</td>\n",
              "      <td>22.311380</td>\n",
              "      <td>131.693681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>180.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.130000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>89.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>300.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.450000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>212.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>600.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>1.100000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>356.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>591723.000000</td>\n",
              "      <td>1125.000000</td>\n",
              "      <td>534.000000</td>\n",
              "      <td>18.740000</td>\n",
              "      <td>184.000000</td>\n",
              "      <td>365.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fe1a0a7-567d-4d3c-8956-18b1d81b01f7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1fe1a0a7-567d-4d3c-8956-18b1d81b01f7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1fe1a0a7-567d-4d3c-8956-18b1d81b01f7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "O desvio padrão está muito grande, o que comprova a discrepância. **Exemplo o desvio padrão dos preços, está maior que a própria média dos preços.**\n",
        "\n",
        "*  **Observando a mediana dos preços, 300,0 reais, fica claro como o valor máximo dos preços, 591.723,0 reais, é muito acima do esperado.** "
      ],
      "metadata": {
        "id": "nKgh7xoKkTua"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 6. Deixando evidente as discrepâncias existentes."
      ],
      "metadata": {
        "id": "wrdiHblvnErs"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Os outliers foram identificados. Para trazer um melhor planejamento, é preciso clarear esses dados identificados. "
      ],
      "metadata": {
        "id": "N8oVaggXnXE7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###**Boxplot para minimum_nights**\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "PQtgasM2n5em"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#minimum_nights\n",
        "df.minimum_nights.plot(kind='box',vert=False, figsize=(15,3));\n",
        "plt.show()\n",
        "#Quantidade de valores acima de 30 dias\n",
        "print(\"Reservas disponíveis acima de 30 dias:\")\n",
        "print(f\"Número de reservas:\\t{len(df[df.minimum_nights>30])}\")\n",
        "print(f\"Procentil:         \\t{(len(df[df.minimum_nights>30])/df.shape[0])*100:.4f}%\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 263
        },
        "id": "CNN2P6zEobu5",
        "outputId": "7a9959cc-f945-490d-d872-05e6fc8a7a2a"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x216 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Reservas disponíveis acima de 30 dias:\n",
            "Número de reservas:\t275\n",
            "Procentil:         \t1.1053%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nota-se que o maior número de reservas, de clientes, são para menos de 400 noites. **Dentro de 0 a 200 noites, houve mais pessoas/reservas que entre 400 a 800 noites.** \n",
        "*  Ou seja, 1% dos dados, alteram muito os outros 99%. "
      ],
      "metadata": {
        "id": "yafJnndtpssd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Boxplot para price.**"
      ],
      "metadata": {
        "id": "9lRTeUq3u46U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#price\n",
        "df.price.plot(kind='box', vert=False, figsize=(15,3));\n",
        "plt.show()\n",
        "#Para valores acima de 10.000\n",
        "print(f\"Para hospedagens acima de 10.000 reais:\")\n",
        "print(f\"Quantidade:\\t{len(df.price[df.price>10000])}\")\n",
        "print(f\"Porcentil: \\t{(len(df.price[df.price>10000])/df.shape[0])*100:.4f}%\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 263
        },
        "id": "7csk42OZVJfG",
        "outputId": "bccc7381-5d42-4cb1-f63d-a3eb35e1fe15"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x216 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Para hospedagens acima de 10.000 reais:\n",
            "Quantidade:\t124\n",
            "Porcentil: \t0.4984%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Observando Pelo Boxplot, determinados dados fogem do contexto.\n",
        "Sabendo a existência desses dados, daos que fogem da margem comum, esses devem ser tratados de maneira diferente. \n",
        "**Exemplo, 0.49% de uma amostra de dados, dificilmente pode corresponder 99,51% dos dados. **"
      ],
      "metadata": {
        "id": "Nv427Ovffrvh"
      }
    }
  ]
}